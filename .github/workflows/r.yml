# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.
name: R Package CI
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
permissions:
  contents: read
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        r-version: ['4.1.1', '4.3.0']  # 重新加入 4.3.0
    steps:
      - uses: actions/checkout@v4
      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r-version }}
      - name: Install system dependencies on macOS
        if: runner.os == 'macOS'
        run: |
          brew install qpdf
          brew install pkg-config
          brew install checkbashisms
          xcode-select --install || echo "Xcode already installed"
          brew install gcc
      - name: Install system dependencies on Windows
        if: runner.os == 'Windows'
        run: |
          choco install qpdf
          choco install pkgconfiglite
          choco install make
      - name: Set CRAN mirror and install R package dependencies
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          Rscript -e '
          options(repos = c(CRAN = "https://cloud.r-project.org/"))
          if (!requireNamespace("remotes", quietly = TRUE)) install.packages("remotes")
          remotes::install_cran("rcmdcheck")
          remotes::install_deps(dependencies = TRUE)
          if (!requireNamespace("basicspace", quietly = TRUE)) {
            tryCatch(
              remotes::install_cran("basicspace"),
              error = function(e) remotes::install_github("cran/basicspace")
            )
          }
          '
      - name: Check
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          Rscript -e '
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
          '